version: "3.5"
services:
  db:
    container_name: rb
    ports:
      - "5432:5432"
    image: postgres:latest
    command: postgres -c wal_level=minimal -c fsync=off -c full_page_writes=off -c synchronous_commit=off -c shared_buffers=475MB -c maintenance_work_mem=100MB -c work_mem=10MB -c effective_cache_size=1.2GB -c max_connections=410 -c max_wal_senders=0
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    deploy:
      resources:
        limits:
          cpus: "0.75"
          memory: "1.9GB"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust

  api1:
    image: myelixirapi
    hostname: api1.com
    depends_on:
      - db
    environment:
      HTTP_SERVER_PORT: 4000
      RELEASE_COOKIE: "secret_cookie"
      PEER_NODES: "api2@api2.com"
      RELEASE_NODE: "api1@api1.com"
      POOL_SIZE: 200
      DB_HOST: db
    healthcheck:
      test: curl -f http://api1:4000
    deploy:
      resources:
        limits:
          cpus: "0.275"
          memory: "0.3GB"

  api2:
    image: myelixirapi
    depends_on:
      - api1
    hostname: api2.com
    environment:
      HTTP_SERVER_PORT: 4000
      RELEASE_COOKIE: "secret_cookie"
      PEER_NODES: "api1@api1.com"
      RELEASE_NODE: "api2@api2.com"
      POOL_SIZE: 200
      DB_HOST: db
    healthcheck:
      test: curl -f http://api2:4000
    deploy:
      resources:
        limits:
          cpus: "0.275"
          memory: "0.3GB"

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "0.5GB"
